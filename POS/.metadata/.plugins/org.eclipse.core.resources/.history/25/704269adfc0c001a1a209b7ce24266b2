package MarketPos;


import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import java.util.Scanner;

public class SellerProgram {
	Scanner scan;//글을 입력하는 것.
	DBconnector dbconnecter;//DBconnector class를 상속.
	String user_num = "";//고객 번호

	
	public SellerProgram() {
		scan = new Scanner(System.in);//글을 입력하는 객체 생성
	}

	public void go() {//DBconnector class 연결.
		System.out.println("판매자 프로그램을 시작합니다.");
		dbconnecter = new DBconnector();//객체 생성
		start();//start 메소드 연결
	}

   //메뉴 메소드
	public void start() {
		while (true) {
			System.out.println("사용하시려는 기능을 선택해 주세요");

			System.out.println("\t 1. 회원 추가");
			System.out.println("\t 2. 물건 구매");
			System.out.println("\t 3. 종료");

			String result = scan.next();//6개의 기능 중 1개 입력

			switch (result) {
			case "1"://회원 추가
				customer_add();//메소드 이동
				break;
			case "2"://물건 구매
				purchase();
				break;
			case "3"://종료
				System.out.println("시스템을 종료합니다.");
				break;
			default:
				System.out.println("입력이 잘못 되었습니다.");
				break;
			}
			if (result.equals("3"))
				break;
		}
	}


	//고객 등록 메소드
	public void customer_add() {
		
		String cname; //이름
		String phone; //전화번호
		char grade ='B'; //멤버등급
		int saving = 0; //적립금
		int age; //나이
		

		System.out.println("회원등록을 시작합니다.");
		System.out.println("이름을 입력해 주세요");
		cname = scan.next();
		System.out.println("전화번호를 입력해 주세요");
		phone = scan.next();
		System.out.println("나이 입력해 주세요");
		age = scan.nextInt();
					
		dbconnecter.addCustomer(cname, phone, grade, saving,age);//값 저장.
		System.out.println("등록이 완료 되었습니다.");
	}
	
	
	public void purchase() {
		
		String cardnum;
		int cash;
		int fee;
		int balance;
		
		System.out.println("지금부터 상품 구매를 시작하겠습니다.");
		ArrayList<String> prod_item_list = new ArrayList<String>(); //상품 바코드
		ArrayList<Integer> prod_count_list = new ArrayList<Integer>();//상품 개수

		while (true) {//무한루프(break 될때까지 반복)
			System.out.println("바코드를 입력해주세요");
			String item = scan.next();
			System.out.println("물품개수를 입력해주세요");
			int count = scan.nextInt();
			dbconnecter.checkProduct(item,count);
			prod_item_list.add(item);//구매하려는 물품의 바코드를 물품 번호 list에 저장
			prod_count_list.add(count);//구매하려는 물품의 개수를 list에 저장
			System.out.println("구매종료시 1 입력/ 추가로 구매는 아무키 입력.");
			if (scan.next().equals("1"))//1누르면 구매 메소드에서 나감.
				break;
		}
		
		fee = calculation(prod_item_list,prod_count_list);
			
		

		
		//System.out.println("총 " + prod_count_list.size() + "개 구매");// 물품 개수 list에 저장한 구매 수량이 출력.
		
		System.out.println("=======================");
		System.out.println("회원여부를 선텍헤 주세요");
		System.out.println("-----------------------");
		System.out.println("\t 1. 회원구매.");
		System.out.println("\t 2. 비회원구매.");
		System.out.println("\t 3. 종료.");
		System.out.println("=======================");
		

		String result = scan.next();

		switch (result) {
		case "1":
			dbconnecter.cdisplay();
			break;
		case "2":
			System.out.println("고객전화번호를 입력해주세요(ex-0101234)");
			String key = scan.next();
			dbconnecter.csearch(key);
			break;
		default:
			break;
		}
	}	
		


//	System.out.println("결제 방법을 선택해 주십시오.");
//	System.out.println("\t1. 현금");
//	System.out.println("\t2. 신용카드");
//	System.out.println("\t3. 고객카드");
//	System.out.println("\t4. 종료");
//	
//
//	String result2 = scan.next();//위의 결제 방법 메뉴중에 선택 입력


//	switch (result) {
//	case "1"://1. 현금
//		System.out.println("현금을 선택하셨습니다.");
//		calcCost(result, prod_num_list, prod_count_list);//비연동 결제 함수로 연동
//		break;
//	case "2"://2.신용카드
//		System.out.println("신용카드를 선택하셨습니다.");
//		calcCost(result, prod_num_list, prod_count_list);//비연동 결제 함수로 연동
//		break;
//	case "3"://3.고객카드
//		System.out.println("고객카드를 선택하셨습니다.");//고객 용도의 결제 함수로 연동
//		String result2 = "";
//		int point = 0;
//		while (true) {
//			System.out.println("회원님의 전화번호를 입력해 주십시오.(종료하시려면 1을 입력해주세요.)");
//			result2 = scan.next();
//			if (dbconnecter.1checkCustomer(result2))// 회원정보에 등록되어 있으면
//				break;//나감
//			else if (result2.equals("1"))//종료
//				break;//나감
//			else//번호 틀리면
//				System.out.println("번호가 존재하지 않습니다.");
//		}
//		System.out.println(dbconnecter.1checkPoint(result2)
//				+ "원의 포인트가 있습니다.");//현재 포인트 양을 출력
//		System.out.println("사용하시려면 1을 입력하고 사용하지 않으시면 아무 숫자나 입력해주세요.");
//		String result1 = scan.next();
//		if (result1.equals("1"))
//			point = dbconnecter.1checkPoint(result2);//포인트 사용
//		
//		if (!result2.equals("1"))
//			calcCost(result.prod_num_list, prod_count_list, result2, point);//그냥 현금으로 계산
//		break;
//
//	default:
//		System.out.println("잘못된 입력값입니다.");
//		break;
//
//	}




}
	//==========================================================================================================

//		//물건 구매 메소드
//		public void buyProduct() {
//			System.out.println("지금부터 상품 구매를 시작하겠습니다.");
//			ArrayList<Integer> prod_num_list = new ArrayList<Integer>();//int형의 arraylist 생성(물품 번호)
//			ArrayList<Integer> prod_count_list = new ArrayList<Integer>();//물품 개수
//
//			while (true) {//무한루프(break 될때까지 반복)
//				dbconnecter.checkProduct();// 물품 목록 출력
//				prod_num_list.add(checkAnswerInt("원하시는 항목의 번호를 선택해 주세요.",
//						" <= 맞으시면 1을 입력해 주세요."));//구매하려는 물품의 번호를 물품 번호 list에 저장
//				prod_count_list.add(checkAnswerInt("수량을 선택해 주세요.",
//						" <= 맞으시면 1을 입력해 주세요."));//구매하려는 물품의 수량을 물품 개수 list에 저장
//
//				System.out.println("구매를 종료하시려면 1을 입력해 주시고 추가로 구매를 원하시면 아무키나 입력해 주세요.");
//				if (scan.next().equals("1"))//1누르면 구매 메소드에서 나감.
//					break;
//			}
//			System.out.println("총 " + prod_count_list.size() + "개를 구매하셨습니다.");// 물품 개수 list에 저장한 구매 수량이 출력.
//
//
//		System.out.println("결제 방법을 선택해 주십시오.");
//		System.out.println("\t1. 현금");
//		System.out.println("\t2. 신용카드");
//		System.out.println("\t3. 고객카드");
//		System.out.println("\t4. 종료");
//
//		String result = scan.next();//위의 결제 방법 메뉴중에 선택 입력
//		System.out.println(result + " <= 맞으시면 1을 입력해주세요.");
//		if (!scan.next().equals("1"))
//			result = "no";
//
//		switch (result) {
//		case "1"://1. 현금
//			System.out.println("현금을 선택하셨습니다.");
//			calcCost(result, prod_num_list, prod_count_list);//비연동 결제 함수로 연동
//			break;
//		case "2"://2.신용카드
//			System.out.println("신용카드를 선택하셨습니다.");
//			calcCost(result, prod_num_list, prod_count_list);//비연동 결제 함수로 연동
//			break;
//		case "3"://3.고객카드
//			System.out.println("고객카드를 선택하셨습니다.");//고객 용도의 결제 함수로 연동
//			String result2 = "";
//			int point = 0;
//			while (true) {
//				System.out.println("회원님의 전화번호를 입력해 주십시오.(종료하시려면 1을 입력해주세요.)");
//				result2 = scan.next();
//				if (dbconnecter.checkCustomer(result2))// 회원정보에 등록되어 있으면
//					break;//나감
//				else if (result2.equals("1"))//종료
//					break;//나감
//				else//번호 틀리면
//					System.out.println("번호가 존재하지 않습니다.");
//			}
//			System.out.println(dbconnecter.checkPoint(result2)
//					+ "원의 포인트가 있습니다.");//현재 포인트 양을 출력
//			System.out.println("사용하시려면 1을 입력하고 사용하지 않으시면 아무 숫자나 입력해주세요.");
//			String result1 = scan.next();
//			if (result1.equals("1"))
//				point = dbconnecter.checkPoint(result2);//포인트 사용
//			
//			if (!result2.equals("1"))
//				calcCost(result, prod_num_list, prod_count_list, result2, point);//그냥 현금으로 계산
//			break;
//
//		default:
//			System.out.println("잘못된 입력값입니다.");
//			break;
//
//		}
//	}
//
//	//파일에 계산을 입력하는 메소드(현금,신용카드-비회원 용도)
//	public void calcCost(String method, ArrayList<Integer> Prod_num,
//			ArrayList<Integer> Prod_count) {//결제 수단, 물품 번호,물품 개수를 가지고 계산
//		
//		int result_money = dbconnecter.checkCost(Prod_num, Prod_count);//구매의 총액을 변수에 대입
//		System.out.println("총 금액 = >" + result_money);//총금액 출력
//		
//		if (method.equals("2"))//신용카드를 선택하면
//			result_money += result_money * 0.07;//수수료 7%
//
//		System.out.println(result_money + " 원 결제가 완료 되었습니다.");//현금, 신용카드, 고객카드 결제 내역 출력
//		dbconnecter.saveresult(Prod_num, Prod_count, "CUS", "11",result_money);//물품 번호,물품 개수,구매,비회원 전화번호
//	}
//
//	//파일에 계산을 입력하는 메소드(고객카드의 포인트,현금 or카드 계산-고객 용도)
//	public void calcCost(String method, ArrayList<Integer> Prod_num,
//			ArrayList<Integer> Prod_count, String phonenumber, int point) {//결제 구분, 물품 번호, 물품 개수,전화번호,포인트로 계산
//		int result_money = dbconnecter.checkCost(Prod_num, Prod_count) - point;//결제한 금액은 총 비용에서 포인트 결제 값을 뺀 값이다.
//
//		if (point > 0)//포인트가 0보다 크면
//			dbconnecter.clearPoint(phonenumber);//입력된 전화번호에 맞는 고객의 포인트 사용 후 초기화 클래스로 이동
//		else
//			dbconnecter.addPoint(checkBonus(result_money), phonenumber);//포인트 추가하기
//
//		System.out.println(result_money + " 원 결제가 완료 되었습니다.");//현금으로 결제됨.
//		dbconnecter.saveresult(Prod_num, Prod_count, "CUS", phonenumber,result_money);//회원 전화번호로 구매 목록 저장
//	}
//
//	//판매 금액의 비율 계산 메소드
//	public int checkBonus(int result_money) {
//		if (result_money < 10000)//만원 미만
//			return (int) (result_money * 0.001);
//		if (result_money >= 10000 && result_money < 50000)//만원 이상 오만원 미만
//			return (int) (result_money * 0.005);
//		if (result_money >= 50000 && result_money < 100000)//오만원 이상 십만원 미만
//			return (int) (result_money * 0.008);
//		else//십만원 이상
//			return (int) (result_money * 0.01);
//	}
//



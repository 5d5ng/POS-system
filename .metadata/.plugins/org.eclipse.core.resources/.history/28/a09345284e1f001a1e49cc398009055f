package MarketPos;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

public class DB_seller {
	Connection conn = DBconnector2.getConnection();
	PreparedStatement pstm = null;
	ResultSet rs = null;
	public static DB_seller db_sell = new DB_seller();
	public static DB_seller getInstacne() {
		if(db_sell == null) {
			db_sell = new DB_seller();
		}

		return db_sell;

	}
	//회원인지 확인하는 메소드
	public boolean checkCustomer(String phone) {
		try {

			String sql = "select * from customer where phone = '"+phone+"'"; // item 으로 바코드 확인하고 
			pstm = conn.prepareStatement(sql);
			rs = pstm.executeQuery();

			while(rs.next()) {         
				String target = rs.getString("phone");
				if(target.equals(phone)) {
					return true;
				}
			}
			return false;
		} catch (SQLException se) {
			System.err.println("SQL 수행중 에러가 발생했습니다." + se.getMessage());
		} finally {
		}
		return false;
	}
	
	  //회원을 등록하는 메소드  - 0  판매자
	   public void addCustomer(String cname, String phone, char grade, int saving,int age) {
	      try {
	         
	         String sql = " insert into Customer values('"+cname+"','"+phone+"','"+ grade +"', "+ saving +" , "+age +  ")" ;    
				pstm = conn.prepareStatement(sql);
				rs = pstm.executeQuery();

	      } catch (SQLException se) {
	         System.err.println("SQL 수행중 에러가 발생했습니다. 이미 존재하는 회원입니다 다시 시도해주세요" + se.getMessage());
	      } finally {

	      }      

	      System.out.println(cname + "/" + phone  + "/" + grade   + "/"
	            + saving  + "/" + age + "/ 회원 추가 완료");   
	      
	   }






}
